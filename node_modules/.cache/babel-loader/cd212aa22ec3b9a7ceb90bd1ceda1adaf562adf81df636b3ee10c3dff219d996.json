{"ast":null,"code":"var _jsxFileName = \"E:\\\\sd_DL\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageURL, setImageURL] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setImageURL(\"\");\n    setError(\"\");\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      setError(\"Please select an image first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setImageURL(data.image_url); // Use the direct URL from the backend\n      }\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      setError(\"Error processing image. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Processed Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageURL,\n        alt: \"Processed\",\n        style: {\n          maxWidth: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"rQ82fUu/v6TqI59hh7bmI/8PBZc=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_s","selectedFile","setSelectedFile","imageURL","setImageURL","error","setError","handleFileChange","event","target","files","handleUpload","formData","FormData","append","fetch","method","body","then","response","json","data","image_url","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","style","color","src","alt","maxWidth","_c","$RefreshReg$"],"sources":["E:/sd_DL/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadForm = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [imageURL, setImageURL] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setImageURL(\"\");\r\n        setError(\"\");\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (!selectedFile) {\r\n            setError(\"Please select an image first.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n\r\n        fetch(\"http://localhost:5000/upload\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setError(data.error);\r\n                } else {\r\n                    setImageURL(data.image_url); // Use the direct URL from the backend\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n                setError(\"Error processing image. Please try again.\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload an Image</h2>\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n            \r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            \r\n            {imageURL && (\r\n                <div>\r\n                    <h3>Processed Image:</h3>\r\n                    <img src={imageURL} alt=\"Processed\" style={{ maxWidth: \"100%\" }} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAChCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtCN,WAAW,CAAC,EAAE,CAAC;IACfE,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACV,YAAY,EAAE;MACfK,QAAQ,CAAC,+BAA+B,CAAC;MACzC;IACJ;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEb,YAAY,CAAC;IAErCc,KAAK,CAAC,8BAA8B,EAAE;MAClCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACV,CAAC,CAAC,CACGM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAAChB,KAAK,EAAE;QACZC,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;MACxB,CAAC,MAAM;QACHD,WAAW,CAACiB,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MACjC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAElB,KAAK,IAAK;MACdmB,OAAO,CAACnB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BC,QAAQ,CAAC,2CAA2C,CAAC;IACzD,CAAC,CAAC;EACV,CAAC;EAED,oBACIR,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEzB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE/B,OAAA;MAAQmC,OAAO,EAAEtB,YAAa;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7CxB,KAAK,iBAAIP,OAAA;MAAGoC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhD1B,QAAQ,iBACLL,OAAA;MAAA2B,QAAA,gBACI3B,OAAA;QAAA2B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB/B,OAAA;QAAKsC,GAAG,EAAEjC,QAAS;QAACkC,GAAG,EAAC,WAAW;QAACH,KAAK,EAAE;UAAEI,QAAQ,EAAE;QAAO;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAtDID,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}